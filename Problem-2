#Project Euler Problem 2

#Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
#By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
#find the sum of the even-valued terms.


#Python Solution

sum = 0
Fib_1 = 0
Fib_2 = 1

while Fib_2 <= 4000000:
  Fib_1, Fib_2 = Fib_2, Fib_1 + Fib_2

  if Fib_1 % 2 == 0:
    sum += Fib_1

print("The sum is:  ", str(sum))


#R Solution

fib_numbers <- c(0, 1)

while (max(fib_numbers)< 4000000){
  length <- length(fib_numbers)
  fib_numbers <- c(fib_numbers, fib_numbers[length - 1] + fib_numbers[length])}

answer <- (sum(fib_numbers[fib_numbers %% 2 == 0]))
print(paste("The answer is: ", answer))

