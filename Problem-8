#Project Euler Problem 8

#find the maximum product of 13 adjacent digits in this number:
#7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843
#8586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557
#6689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749
#3035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776
#6572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397
#5369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474
#8216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586
#1786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408
#0719840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606
#0588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450


#Python Solution:

import math

big_number = str("73167176531330624919225119674426574742355349194934"
+"96983520312774506326239578318016984801869478851843" + "85861560789112949495459501737958331952853208805511"
+ "12540698747158523863050715693290963295227443043557" + "66896648950445244523161731856403098711121722383113" 
+ "62229893423380308135336276614282806444486645238749" + "30358907296290491560440772390713810515859307960866"
+ "70172427121883998797908792274921901699720888093776" + "65727333001053367881220235421809751254540594752243"
+ "52584907711670556013604839586446706324415722155397" + "53697817977846174064955149290862569321978468622482"
+ "83972241375657056057490261407972968652414535100474" + "82166370484403199890008895243450658541227588666881"
+ "16427171479924442928230863465674813919123162824586" + "17866458359124566529476545682848912883142607690042"
+ "24219022671055626321111109370544217506941658960408" + "07198403850962455444362981230987879927244284909188"
+ "84580156166097919133875499200524063689912560717606"  + "05886116467109405077541002256983155200055935729725"
+ "71636269561882670428252483600823257530420752963450")

def main():
  product_subset = 13
  final_product = 0
  for x in range (len(big_number) + 1 - product_subset):
    a = (big_number[x: x + product_subset])
    product = 1
    for y in a:
      product *= int(y)
    if product > final_product:
      final_product = product
  print('The final product is:  ', final_product)
  
main()


#R Solution

big_number <- "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"

len <- nchar(big_number)
product_len <- 13
final_product <- 0

for (x in 1:(len - product_len + 1)){
  candidate_segment <- unlist(strsplit(substr(big_number, x,x + product_len - 1),""))
  candidate_segment <- as.numeric(candidate_segment)
  candidate_answer <- prod(candidate_segment)
  if(final_product<candidate_answer){
    final_product<-candidate_answer
  }
}
print(paste(final_product, "is the largest product."))

